# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy API

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: api/package-lock.json

      - run: npm ci
        working-directory: ./api

      - run: npm run build
        working-directory: ./api

      - name: Create env file
        run: |
          touch .env
          echo AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} > .env
          echo AWS_BUCKET_REGION=${{ secrets.AWS_BUCKET_REGION }} > .env
          echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} > .env
          echo AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} > .env
          echo AWS_DB_ENDPOINT=${{ secrets.AWS_DB_ENDPOINT }} > .env
          echo AWS_DB_NAME=${{ secrets.AWS_DB_NAME }} > .env
          echo AWS_DB_USER_NAME=${{ secrets.AWS_DB_USER_NAME }} > .env
          echo AWS_DB_PASSWORD=${{ secrets.AWS_DB_PASSWORD }} > .env
          echo AWS_DB_PORT=${{ secrets.AWS_DB_PORT }} > .env
          echo SERVER_PORT=${{ secrets.SERVER_PORT }} > .env
          echo CLIENT_ORIGIN_URL=${{ secrets.CLIENT_ORIGIN_URL }} > .env
          echo AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }} > .env
          echo AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }} > .env
          cat .env
        working-directory: ./api

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/church-music-api:latest
